{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/HomeContent.js","components/Home.js","components/Upload.js","components/Query.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","handleLogOut","event","a","preventDefault","Auth","signOut","props","auth","setAuthStatus","setUser","error","console","log","message","className","role","aria-label","href","src","width","height","alt","id","this","isAuthenticated","user","username","onClick","Component","Hero","HomeContent","Home","$","window","AWS","config","update","region","credentials","CognitoIdentityCredentials","IdentityPoolId","s3","S3","apiVersion","params","Bucket","Upload","files","document","getElementById","file","filePath","name","upload","Key","Body","ACL","data","alert","on","progress","uploaded","parseInt","loaded","total","attr","next","html","target","type","class","htmlFor","s3upload","max","value","Form","state","links","handleSubmit","bind","handleChange","inputValue","stateField","setState","headers","axios","post","tags","split","response","request","for","onSubmit","aria-describedby","placeholder","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","inputs","getElementsByClassName","i","length","classList","contains","remove","hasOwnProperty","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","Validate","signIn","history","push","err","onInputChange","onChange","Register","signUp","attributes","signUpResponse","ForgotPassword","forgotPasswordHandler","forgotPassword","ForgotPasswordVerification","passwordVerificationHandler","forgotPasswordSubmit","ChangePassword","currentAuthenticatedUser","changePassword","ChangePasswordConfirmation","Welcome","Footer","library","faEdit","App","isAuthenticating","authenticated","currentSession","session","authProps","exact","path","render","ChangePasswordConfirm","Boolean","location","hostname","match","Amplify","configure","mandatorySignIn","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2d20d793.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"monash.png\" width=\"30\" height=\"100\" alt=\"logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <a href=\"/\" className=\"navbar-item\">\n              Home\n            </a>\n            {this.props.auth.isAuthenticated && this.props.auth.user && (\n            <a href=\"/upload\" className=\"navbar-item\">\n              Upload Image\n            </a>\n            )}\n            {this.props.auth.isAuthenticated && this.props.auth.user && (\n            <a href=\"/query\" className=\"navbar-item\">\n              Find Query\n            </a>\n            )}\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                    <a href=\"/register\" className=\"button is-primary\">\n                      <strong>Register </strong>\n                    </a>\n                    <a href=\"/login\" className=\"button is-light\">\n                    Log in\n                    </a>\n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <a href=\"/\" onClick={this.handleLogOut} className=\"button is-light\">\n                    Log out\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function Hero() {\n  return (\n    <section className=\"hero is-primary\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <img src=\"2.png\" />\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function HomeContent() {\n  return (\n    <section className=\"container\">\n    </section>\n  )\n}\n","import React, { Fragment } from 'react';\nimport Hero from './Hero';\nimport HomeContent from './HomeContent';\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Hero />\n      <div className=\"box cta\">\n        <p className=\"has-text-centered\">\n          \n        </p>\n      </div>\n      <HomeContent />\n    </Fragment>\n  )\n}\n","import React, { Component,Fragment } from 'react';\nimport AWS from 'aws-sdk';\n\nconst $ = window.$;\nvar bucketName = \"serverless-object-detection\";\nvar bucketRegion = \"us-east-1\";\nvar IdentityPoolId = \"us-east-1:b4bd7b63-d1ac-4a26-a8e8-177fd035a638\";\n \nAWS.config.update({\n    region: bucketRegion,\n    credentials: new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: IdentityPoolId\n    })\n});\n\n    var s3 = new AWS.S3({\n        apiVersion: '2006-03-01',\n        params: {Bucket: bucketName}\n    });\n\n\nexport default class Upload extends Component {\n    constructor(){\n        super();\n    }\n    \n\n\n    s3upload() {  \n        \n        var files = document.getElementById('fileUpload').files;\n        if (files) \n        {\n            var file = files[0];\n            var fileName = file.name;\n            var filePath = fileName;\n            var fileUrl = 'https://' + bucketRegion + '.amazonaws.com/' +  filePath;\n\n    \n            s3.upload({\n                            Key: filePath,\n                            Body: file,\n                            ACL: 'public-read'\n                        }, function(data) {\n                            alert('Successfully Uploaded!');\n                        }).on('httpUploadProgress', function (progress) {\n                            var uploaded = parseInt((progress.loaded * 100) / progress.total);\n                            $(\"progress\").attr('value', uploaded);\n                        });$(document).on('change', '.custom-file-input', function (event) {\n                            $(this).next('.custom-file-label').html(event.target.files[0].name);\n                        })\n                        ;\n                       \n        }\n    };\n\n\n\n\nrender(){\n    \n    return (\n        <Fragment>\n       <form>\n       {this.props.auth.isAuthenticated && this.props.auth.user && (\n       <div className=\"container mt-4\">\n            <h1 className=\"display-4 text-center mb-4\">\n            <i className=\"fa-react\"/><b>Select image to upload</b></h1>\n\n            \n\n\n            \n            <div className=\"container mt-4\">\n            <input type=\"file\" class=\"custom-file-input\" id=\"fileUpload\"/>\n            <label class=\"custom-file-label\" htmlFor=\"fileUpload\">Choose file</label></div>\n\n\n            <div className=\"container mt-4\">\n            <button type=\"button\" className=\"btn btn-primary btn-xl btn-block float-right\" onClick={this.s3upload}>Upload</button></div>\n            <progress max='100' value='0'/>\n\n            \n\n\n            \n       \n            \n              </div>\n       )}\n              </form>\n        </Fragment>\n    );\n}\n}\n\n\n\n\n\n","import React, { Component,Fragment } from 'react';\nimport axios from 'axios';\nimport JSONPretty from 'react-json-pretty';\n\nexport default class Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      links: null,\n      \n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const inputValue = event.target.value;\n    const stateField = event.target.name;\n    this.setState({\n      [stateField]: inputValue,\n    });\n    console.log(this.state);\n  }\n\n  \n  async handleSubmit(event) {\n    event.preventDefault();\n  \n    const { name } = this.state;\n    const headers = {'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'OPTIONS,POST'};\n    try{\n    const response = await axios.post('https://cors-anywhere.herokuapp.com/' +\n      'https://cut6nmdii3.execute-api.us-east-1.amazonaws.com/production',\n      { tags: `${name}`.split(\",\") }, {headers}\n    )\n    //const data = response.json();\n    this.setState({links: response.request.response})\n    console.log(response.request.response);\n    \n    }\n    \n    catch (error) {\n        \n       \n    }\n}\n\n  render() {\n      \n    return (\n        <Fragment>\n                <form>\n                {this.props.auth.isAuthenticated && this.props.auth.user && (\n                    <div className=\"container mt-4\">\n                    <h1 className=\"display-4 text-center mb-4\">\n                    <i className=\" fa-react\"/><b>Enter Tags to get a list of URLS</b> </h1>\n\n                    <div className=\"container mt-4\">\n                    <label for=\"exampleInputEmail1\"></label>\n                    <form onSubmit={this.handleSubmit}>\n                    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Tags\" type=\"text\" name=\"name\" onChange={this.handleChange} value={this.state.name}/>\n                    <small id=\"emailHelp\" class=\"form-text text-muted\">For multiple tags enter comma after every tag. eg \"car,person\"</small>\n                    <input type=\"submit\" value=\"Send Query\" className=\"container btn btn-primary btn-block mt-4\" />\n                    \n     \n          \n                    </form>\n                \n                </div>\n\n        \n    <div> <JSONPretty id=\"json-pretty\" data={this.state.links}></JSONPretty></div>\n          \n      \n     </div>\n                )}\n     </form>\n     </Fragment>\n    );\n  }\n}","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Log in</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      this.props.history.push(\"/welcome\");\n      console.log(signUpResponse);\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Register</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Register\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPassword(this.state.email);\n      this.props.history.push('/forgotpasswordverification');\n    }catch(error) {\n      console.log(error);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address associated with your account and we'll\n            email you a password reset link.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: \"\",\n    email: \"\",\n    newpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPasswordSubmit(\n        this.state.email,\n        this.state.verificationcode,\n        this.state.newpassword\n      );\n      this.props.history.push(\"/changepasswordconfirmation\");\n    }catch(error) {\n      console.log(error);\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the verification code sent to your email address below,\n            your email address and a new password.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      console.log(user);\n      await Auth.changePassword(\n        user,\n        this.state.oldpassword,\n        this.state.newpassword\n      );\n      this.props.history.push(\"/changepasswordconfirmation\");\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: { ...this.state.errors, cognito: err }\n      });\n      console.log(err);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from \"react\";\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been successfully updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <section className=\"section auth\">\n      <div className=\"container\">\n        <h1>Welcome!</h1>\n        <p>You have successfully registered a new account.</p>\n        <p>We've sent you a email. Please click on the confirmation link to verify your account.</p>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n           Monash University : Assignment 2 FIT5225 2020 : TagStore: A Modern Image Storage on the Cloud\n        </p>\n      </div>\n    </footer>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Upload from './components/Upload';\nimport Query from './components/Query';\nimport LogIn from './components/auth/LogIn';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport Footer from './components/Footer';\nimport { Auth } from 'aws-amplify';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(session);\n      const user = await Auth.currentAuthenticatedUser();\n      this.setUser(user);\n    } catch(error) {\n      if (error !== 'No current user') {\n        console.log(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => <Home {...props} auth={authProps} />} />\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              <Route exact path=\"/upload\" render={(props) => <Upload {...props} auth={authProps} />} />\n              <Route exact path=\"/query\" render={(props) => <Query {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}